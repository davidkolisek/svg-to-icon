@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @return if($index,
    str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace),
    $string);
}

@function svg-uri-icon($svg, $fill-color: null, $svg-init-color: null) {
  @if not str-index($svg, xmlns) {
    $svg: str-replace($svg, '<svg', '<svg xmlns="http://www.w3.org/2000/svg"');
  }

  @if $fill-color and not($svg-init-color) {
    @if str-index($svg, "fill") {
      $svg: str-replace($svg, "fill", "data-old-fill");
      $svg: str-replace($svg, '<path', '<path fill="#{$fill-color}"');
      $svg: str-replace($svg, '<circle', '<circle fill="#{$fill-color}"');
    }

    @else {
      $svg: str-replace($svg, '<path', '<path fill="#{$fill-color}"');
      $svg: str-replace($svg, '<circle', '<circle fill="#{$fill-color}"');
    }
  }

  @if $svg-init-color {
    @if str-index($svg, $svg-init-color) {
      $svg: str-replace($svg, $svg-init-color, $fill-color);
    }
  }

  $encoded: '';
  $slice: 2000;
  $index: 0;
  $loops: str-length($svg);

  @for $i from 1 through $loops {
    $chunk: str-slice($svg, $index, $index + $slice - 1);
    $chunk: str-replace($chunk, '"', '\'');
    $chunk: str-replace($chunk, '%', '%25');
    $chunk: str-replace($chunk, '&', '%26');
    $chunk: str-replace($chunk, '#', '%23');
    $chunk: str-replace($chunk, '{', '%7B');
    $chunk: str-replace($chunk, '}', '%7D');
    $chunk: str-replace($chunk, '<', '%3C');
    $chunk: str-replace($chunk, '>', '%3E');

    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }

  @return url("data:image/svg+xml,#{$encoded}");
}

@mixin create-icon($svg-icon, $fill-color: null, $curr-color: null, $size: null) {
  $svg: $svg-icon;
  display: inline-block;
  background-image: svg-uri-icon($svg, $fill-color, $curr-color);
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
  vertical-align: -0.125em;

  @if $size {
    width: $size;
    height: $size;
  }

  @content;
}

:root {
  --i-user: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!--! Font Awesome Pro 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d="M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512H418.3c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304H178.3z" /></svg>';
}

//svg tag in variable
$i-user: var(--i-user);


.btn-1 {
  $size: 20px;
  font-size: $size;
  transition: all ease 400ms;
  &:before{
    content: '';
    @include create-icon($i-user, 'red', null, $size){
      transition: all ease 400ms;
    }
  }

  &:hover{
    color: #6b32cd;
    transition: all ease 400ms;
    background: #FFBA00;
    &:before{
      content: '';
      @include create-icon($i-user, '#6b32cd', null, $size){
        transition: all ease 400ms;
      }
    }
  }
}